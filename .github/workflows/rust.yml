name: Rust

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/rust.yml'
      - 'src/**/*.rs'
      - 'tests/**/*.rs'
      - 'Cargo.toml'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - '**'
    paths:
      - '.github/workflows/rust.yml'
      - 'src/**/*.rs'
      - 'tests/**/*.rs'
      - 'Cargo.toml'

jobs:
  build:
    runs-on: windows-latest
    if: github.event.pull_request.draft == false

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust Windows
      if: runner.os == 'Windows'
      run: |
        if (Get-Command "rustup" -ErrorAction SilentlyContinue) {
            rustup update
        } else {
            Invoke-WebRequest https://static.rust-lang.org/rustup/dist/i686-pc-windows-gnu/rustup-init.exe -OutFile rustup-init.exe
            ./rustup-init.exe -y --profile minimal --default-toolchain stable
            echo ::add-path::%USERPROFILE%\.cargo\bin
        }

    - name: Rust version
      run: |
        cargo --version
        rustc --version

    - name: Check std
      run: cargo check --features std,monitor

    - name: Test
      run: cargo test --features monitor
      env:
        RUST_TEST_THREADS: 1

    - name: Test x86
      run: |
        rustup target add i686-pc-windows-msvc
        cargo test --target i686-pc-windows-msvc --features monitor
      env:
        RUST_TEST_THREADS: 1
